diff --git a/CMakeLists.txt b/CMakeLists.txt
index 4e1cb83..17bf8a4 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -15,6 +15,8 @@
 cmake_minimum_required(VERSION 2.6)
 project(kNet)
 
+set(CMAKE_CXX_FLAGS "-stdlib=libc++")
+
 # Generate a build configuration file to ensure the build flags match for the user of the library.
 SET(BUILD_CONFIG_FILE include/kNetBuildConfig.h)
 file(WRITE ${BUILD_CONFIG_FILE} "// This file is programmatically generated using CMake.\n// This file shows the compilation settings that were used to build kNet.\n// These need to match for the client code using kNet.\n")
@@ -35,13 +37,13 @@ macro(AddCompilationDefine define)
    file(APPEND ${BUILD_CONFIG_FILE} "#ifndef ${define}\n#define ${define}\n#endif\n\n")
 endmacro()
 
-set(USE_BOOST TRUE)
+set(USE_BOOST FALSE)
 #set(BOOST_ROOT "TODO_SpecifyYourBoostRootHereIfCMakeAutoSearchFails")
 
 # TinyXML is embedded to the repository, so you can safely keep this true.
 # However, it is not required for core kNet use, but only for the MessageCompiler tool, in which
 # case you can disable it here by setting USE_TINYXML to FALSE, and excluding MessageCompiler from the build.
-set(USE_TINYXML TRUE)
+set(USE_TINYXML FALSE)
 set(TINYXML_ROOT "src/tinyxml")
 
 # If you want to enable the use of visual debugging/profiling windows, uncomment the following line (must
@@ -174,7 +176,7 @@ foreach(srcFile ${kNetSourceFiles})
    set_source_files_properties(${srcFile} PROPERTIES COMPILE_FLAGS "-DDEBUG_CPP_NAME=\"\\\"${baseName}\"\\\"")
 endforeach()
 
-add_library(kNet STATIC ${kNetSourceFiles} ${kNetHeaderFiles})
+add_library(kNet SHARED ${kNetSourceFiles} ${kNetHeaderFiles})
 
 # Add the main kNet include directory root folder to all projects.
 include_directories(./include)
diff --git a/include/kNet/Socket.h b/include/kNet/Socket.h
index 7969c6b..820fafc 100644
--- a/include/kNet/Socket.h
+++ b/include/kNet/Socket.h
@@ -36,6 +36,7 @@ typedef int socklen_t;
 #include <netinet/in.h>
 #include <netdb.h>
 #include <errno.h>
+#include <unistd.h>
 
 #define INVALID_SOCKET (0)
 #define KNET_SOCKET_ERROR (-1)
