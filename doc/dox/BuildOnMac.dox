/**

\page BuildOnMac Building and Running Tundra on Mac OS X 10.6 or 10.7

This page lists the necessary steps to build Tundra on Mac OS X 10.6.8 or newer. Previous OS X versions might work, but are untested. Latest tested version is 10.7.3.

\section MacPrereqs Prerequisites

<ol>
<li>Install cmake from <a href="http://www.cmake.org/cmake/resources/software.html">http://www.cmake.org/cmake/resources/software.html</a>.
<li>Install XCode from Apple App Store (requires an Apple ID).
<li>Install git from <a href="http://git-scm.com/download">http://git-scm.com/download</a>.
<li>Install mercurial from <a href="http://mercurial.selenic.com/downloads">http://mercurial.selenic.com/downloads</a>.
<li>Clone the Tundra repository by running in your home folder <pre>git clone https://github.com/realXtend/naali</pre>
</ol>

These instructions assume that the git clone command was run at the user's home directory, i.e. that Tundra git trunk resides in the folder ~/naali.

\section MacFirstTimeBuild First-Time Build

Open up a new terminal window, and
<ol>
<li>Change into the directory ~/naali/tools/OSX, and run <pre>./BuildDeps.bash -c ~/naali</pre>
<li>The build should proceed into building SkyX & Hydrax, which fail due to missing Ogre framework. Copy Ogre frameworks manually from ~/naali/deps/build/ogre-safe-nocrashes/lib/relwithdebinfo into a system framework directory such as /Library/Frameworks (requires admin privileges). If Ogre's include file OgreOverlaySystem.h does not exist inside the OgreOverlay framework's Headers directory, copy the file in question manually from Ogre's Components/Overlay/include directory into both copies of the OgreOverlay framework.
<li>Rerun <pre>./BuildDeps.bash -c ~/naali</pre>
<li>If installing vlc fails due to a "disk busy" error, rerun <pre>./BuildDeps.bash -c ~/naali</pre> once more. 
</ol>

When you build Tundra for the first time, the build script will locate and build all the necessary dependencies that are required for Tundra. This will take some time. Note that when the script is building boost, there is a long pause during which nothing is printed on the screen, that is normal.

<ul>
<li>NOTE: If you get this error when building the dependencies (in QtScript bindings for Qt):  <em>no matching function for call to 'QFutureIterator<QScriptValue>::QFutureIterator()' -- /Users/<username>/QtSDK/Desktop/Qt/4.8.0/gcc/include/QtCore/qfuture.h:1 note: candidates are: QFutureIterator<T>::QFutureIterator(const QFuture<T>&) [with T = QScriptValue]</em></li>
<li>.. fix it by adding Qt includes to qtscript generators path e.g. by setting this environment variable: export INCLUDE=/Users/<myusername>/QtSDK/Desktop/Qt/4.8.0/gcc/include</li>
</ul>

<p>When the script has finished, the directory ~/naali/deps/ will have been populated with several different 3rd party libraries and the finished build of Tundra is placed at ~/naali/bin/.

\section MacIncrementalBuild Incremental Build and Full Rebuild

Steps to perform a rebuild:

<ul>
<li>If you only modified some C++ file, you can simply re-run make in the naali/ root directory.
<li>To clean up all intermediate C++ symbol files in the build, issue the command 'make clean'.
<li>If you added new files, or modified the CMakeBuildConfig.txt file, you will need to re-run build-mac-deps.bash.
<li>If you modified cmake variables which cmake caches, you may need to clean up the cmake variable cache by deleting the file naali/CMakeCache.txt before running build-mac-deps.bash.
<li>If you want to restore the whole repository into a clean state as it was when you originally cloned it, issue the command 'git clean -x -d -f' in the repository root directory. Be warned though, this will delete ALL untracked files inside the repository directory, even those you added yourself.
</ol>

<p>To view or report outstanding issues related to building on Mac, please visit the <a href="https://github.com/realXtend/naali/issues">Tundra github issue tracker</a>.

  \section MacPreparingAnInstaller How to Generate an Installable Application Bundle
  
If you want to generate an installer package (.dmg) which deploys Tundra as an OSX application, follow these steps:

<ol>
<li>Make sure you have built Tundra according to the full instructions above.
<li>Open a terminal and browse to ~/naali/Tools/OSX.
<li>Type <b>./CreateBundleApp.bash</b>. This will deploy Tundra into an application bundle in ~/naali/build/Tundra.app.
<li>Type <b>./AppPathFix.bash</b>. This will fix up broken OSX .dylib lookup chains by repeatedly calling <a href="http://developer.apple.com/library/mac/#documentation/Darwin/Reference/ManPages/man1/install_name_tool.1.html">install_name_tool</a> on all .dylibs inside the bundle. Additionally, it will deploy any missing non-system .dylibs into the bundle. This step utilizes an external tool from <a href="https://github.com/juj/MacAppFix">juj/MacAppFix</a>.
<li>Type <b>./CreateDMG.bash</b>. This will create a .dmg disk image of the app bundle in ~/naali/build/Tundra.app.
</ol>

After the last step, a disk image will be generated to ~/naali/tundra.dmg.

*/

